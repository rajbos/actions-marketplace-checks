# Fork new action repos
# Get new data from Dependabot
# Store the data in the repo for later use

name: Get repo info

on:
  push:
    paths:
      - .github/workflows/repo-info.yml
      - .github/workflows/repoInfo.ps1

  schedule:
     #- cron: '*/60 * * * *'
     - cron: '20 */1 * * *'

  workflow_dispatch:

env:
  numberOfReposToDo: 1000
    
jobs:
  get-repo-information:
    concurrency: there-can-be-only-one
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get current actions list
        run: |
          curl "${{ secrets.BLOB_SAS_TOKEN }}" > actions.json
          ls -la
          cat actions.json
          
      - uses: actions/upload-artifact@v3
        with:
          name: actions.json
          path: actions.json
          
      - name: Get App Token
        id: get_workflow_token
        uses: rajbos-actions/workflow-application-token-action@v2.1.0
        with:
          application_id: 264650
          application_private_key: ${{ secrets.Automation_App_Key }}
          organization: actions-marketplace-validations
          
      - shell: pwsh
        name: Gotta check 'em all
        run: |
           $actions=(cat actions.json | ConvertFrom-Json)
           Write-Host "Found [$($actions.Length)] actions in the datafile"
           Install-Module -Name PSGraphQL -Repository PSGallery -Scope CurrentUser -Allowclobber -Force
           Install-Module -name powershell-yaml -Force -Repository PSGallery -Scope CurrentUser -Allowclobber
           # get repo information           
           ${{ github.workspace }}/.github/workflows/repoInfo.ps1  -actions $actions -numberofReposToDo ${{ env.numberOfReposToDo }} -access_token "${{ secrets.ACCESS_TOKEN }}" -access_token_destination ${{ steps.get_workflow_token.outputs.token }}

      - name: Commit changes
        if: always()
        run: |
          # pull to make sure we have the latest contents and that the commit / push will succeed
          # still fails if these two files have been updated ofc.

          git pull --quiet
          if [[ `git status --porcelain` ]]; then
            git config --global user.email "github_token@github.com"
            git config --global user.name "GITHUB_TOKEN"
            
            git add status.json
            git add failedForks.json
            git commit -m "Update status.json"
            git push
          else
            echo "Nothing to commit"
          fi
